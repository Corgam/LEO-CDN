version: "3.7"
services:
  {{ node_name }}:
    build: ../../FReD
    depends_on:
      - {{ store_name }}
    image: fred/fred:local
    container_name: {{ node_name }}
    entrypoint: "fred \
    --remote-storage-host {{ store_IP }}:1337 \
    --peer-host {{ node_IP }}:5555 \
    --nodeID {{ node_name }} \
    --host {{ node_IP }}:9001 \
    --cert /cert/{{ node_name }}.crt \
    --key /cert/{{ node_name }}.key \
    --ca-file /cert/ca.crt \
    --adaptor remote \
    --nase-host {{ nase_host }} \
    --nase-cert /cert/{{ node_name }}.crt \
    --nase-key /cert/{{ node_name }}.key \
    --nase-ca /cert/ca.crt \
    --handler dev \
    --badgerdb-path ./db \
    --remote-storage-cert /cert/{{ node_name }}.crt \
    --remote-storage-key /cert/{{ node_name }}.key  \
    --trigger-cert /cert/{{ node_name }}.crt \
    --trigger-key /cert/{{ node_name }}.key \
    --auth-disable-rbac true"
    environment:
      - LOG_LEVEL
    volumes:
      - ../../temp/{{ node_name }}.crt:/cert/{{ node_name }}.crt
      - ../../temp/{{ node_name }}.key:/cert/{{ node_name }}.key
      - ../../common/cert/ca.crt:/cert/ca.crt
    ports:
      - {{ host_port }}:9001
    networks:
      fredwork:
        ipv4_address: {{ node_IP }}

  {{ store_name }}:
    build:
      context: ../../FReD
      dockerfile: storage.Dockerfile
    image: fred/store:local
    container_name: {{ store_name }}
    entrypoint: "storageserver \
    --log-level '${LOG_LEVEL_STORE}' \
    --cert /cert/cert.crt \
    --key /cert/key.key \
    --ca-file /cert/ca.crt"
    volumes:
      - ../../temp/{{ store_name }}.crt:/cert/cert.crt
      - ../../temp/{{ store_name }}.key:/cert/key.key
      - ../../common/cert/ca.crt:/cert/ca.crt
    networks:
      fredwork:
        ipv4_address: {{ store_IP }}

  {{ server_name }}_db:
    image: mysql
    ports:
      - {{ db_port }}:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123
    volumes:
      - ../../satellite/db/{{node_name}}/mysql:/var/lib/mysql
      - ../../satellite/db/{{node_name}}/mysql_files:/var/lib/mysql_files
      - ../../satellite/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      fredwork:
        ipv4_address: {{ db_IP }}
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - -h
        - localhost
      interval: 30s
      timeout: 10s
      retries: 5

  {{ server_name }}:
    build:
      context: ../../satellite/
      dockerfile: satellite.Dockerfile
    command: gunicorn --bind {{ server_IP }}:{{ server_port }} --worker-class=gevent --workers 3 satellite_server:app
    ports:
      - 5000:5000
    depends_on:
    - {{ node_name }}
    - {{ server_name }}_db
    restart: on-failure
    image: satellite:local
    container_name: {{ server_name }}
    volumes:
      - ../../temp/{{ server_name }}.crt:/cert/client.crt
      - ../../temp/{{ server_name }}.key:/cert/client.key
      - ../../common/cert/ca.crt:/cert/ca.crt
      - ../../temp/freds.json:/info/nodes.json
      - ../../temp/{{ server_name }}.json:/info/node.json
      - ../../temp/logs:/logs
      - ../../config.toml:/config.toml
      - ../../satellite/db/{{node_name}}:/db
    networks:
      fredwork:
        ipv4_address: {{ server_IP }}

networks:
  fredwork:
    external: true
